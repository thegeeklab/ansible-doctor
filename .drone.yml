---
kind: pipeline
name: lint

platform:
  os: linux
  arch: amd64

steps:
  - name: check-format
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry config experimental.new-installer false
      - poetry install
      - poetry run yapf -dr ./ansibledoctor
    environment:
      PY_COLORS: 1

  - name: check-coding
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry config experimental.new-installer false
      - poetry install
      - poetry run ruff ./ansibledoctor
    environment:
      PY_COLORS: 1

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

---
kind: pipeline
name: test

platform:
  os: linux
  arch: amd64

steps:
  - name: fetch
    image: python:3.11
    commands:
      - git fetch -tq

  - name: python37-pytest
    image: python:3.7
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry config experimental.new-installer false
      - poetry install
      - poetry version
      - poetry run ansible-doctor --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

  - name: python38-pytest
    image: python:3.8
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry config experimental.new-installer false
      - poetry install
      - poetry version
      - poetry run ansible-doctor --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

  - name: python39-pytest
    image: python:3.9
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry config experimental.new-installer false
      - poetry install
      - poetry version
      - poetry run ansible-doctor --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

  - name: python310-pytest
    image: python:3.10
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry config experimental.new-installer false
      - poetry install
      - poetry version
      - poetry run ansible-doctor --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

  - name: python311-pytest
    image: python:3.11
    commands:
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry config experimental.new-installer false
      - poetry install
      - poetry version
      - poetry run ansible-doctor --help
    environment:
      PY_COLORS: 1
    depends_on:
      - fetch

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

depends_on:
  - lint

---
kind: pipeline
name: build-package

platform:
  os: linux
  arch: amd64

steps:
  - name: build
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry build

  - name: checksum
    image: alpine
    commands:
      - cd dist/ && sha256sum * > ../sha256sum.txt

  - name: changelog-generate
    image: thegeeklab/git-chglog
    commands:
      - git fetch -tq
      - git-chglog --no-color --no-emoji -o CHANGELOG.md ${DRONE_TAG:---next-tag unreleased unreleased}

  - name: changelog-format
    image: thegeeklab/alpine-tools
    commands:
      - prettier CHANGELOG.md
      - prettier -w CHANGELOG.md

  - name: publish-github
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_token
      files:
        - dist/*
        - sha256sum.txt
      note: CHANGELOG.md
      overwrite: true
      title: ${DRONE_TAG}
    when:
      ref:
        - refs/tags/**

  - name: publish-pypi
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry publish -n
    environment:
      POETRY_HTTP_BASIC_PYPI_PASSWORD:
        from_secret: pypi_password
      POETRY_HTTP_BASIC_PYPI_USERNAME:
        from_secret: pypi_username
    when:
      ref:
        - refs/tags/**

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

depends_on:
  - test

---
kind: pipeline
name: build-container

platform:
  os: linux
  arch: amd64

steps:
  - name: build
    image: python:3.11
    commands:
      - git fetch -tq
      - pip install poetry poetry-dynamic-versioning -qq
      - poetry build

  - name: dryrun
    image: thegeeklab/drone-docker-buildx:20
    settings:
      dockerfile: Dockerfile.multiarch
      dry_run: true
      platforms:
        - linux/amd64
        - linux/arm64
      provenance: false
      repo: thegeeklab/${DRONE_REPO_NAME}
    when:
      ref:
        - refs/pull/**
    depends_on:
      - build

  - name: publish-dockerhub
    image: thegeeklab/drone-docker-buildx:20
    settings:
      auto_tag: true
      dockerfile: Dockerfile.multiarch
      password:
        from_secret: docker_password
      platforms:
        - linux/amd64
        - linux/arm64
      provenance: false
      repo: thegeeklab/${DRONE_REPO_NAME}
      username:
        from_secret: docker_username
    when:
      ref:
        - refs/heads/main
        - refs/tags/**
    depends_on:
      - dryrun

  - name: publish-quay
    image: thegeeklab/drone-docker-buildx:20
    settings:
      auto_tag: true
      dockerfile: Dockerfile.multiarch
      password:
        from_secret: quay_password
      platforms:
        - linux/amd64
        - linux/arm64
      provenance: false
      registry: quay.io
      repo: quay.io/thegeeklab/${DRONE_REPO_NAME}
      username:
        from_secret: quay_username
    when:
      ref:
        - refs/heads/main
        - refs/tags/**
    depends_on:
      - dryrun

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

depends_on:
  - test

---
kind: pipeline
name: docs

platform:
  os: linux
  arch: amd64

concurrency:
  limit: 1

steps:
  - name: assets
    image: thegeeklab/alpine-tools
    commands:
      - make doc

  - name: markdownlint
    image: thegeeklab/markdownlint-cli
    commands:
      - markdownlint 'docs/content/**/*.md' 'README.md' 'CONTRIBUTING.md'

  - name: spellcheck
    image: thegeeklab/alpine-tools
    commands:
      - spellchecker --files 'docs/content/**/*.md' 'README.md' -d .dictionary -p spell indefinite-article syntax-urls --no-suggestions
    environment:
      FORCE_COLOR: true
      NPM_CONFIG_LOGLEVEL: error

  - name: testbuild
    image: thegeeklab/hugo:0.105.0
    commands:
      - hugo --panicOnWarning -s docs/ -b http://localhost:8000/

  - name: link-validation
    image: thegeeklab/link-validator
    commands:
      - link-validator --color=always --rate-limit 10
    environment:
      LINK_VALIDATOR_BASE_DIR: docs/public
      LINK_VALIDATOR_RETRIES: 3

  - name: build
    image: thegeeklab/hugo:0.105.0
    commands:
      - hugo --panicOnWarning -s docs/

  - name: beautify
    image: thegeeklab/alpine-tools
    commands:
      - html-beautify -r -f 'docs/public/**/*.html'
    environment:
      FORCE_COLOR: true
      NPM_CONFIG_LOGLEVEL: error

  - name: publish
    image: thegeeklab/drone-s3-sync
    settings:
      access_key:
        from_secret: s3_access_key
      bucket: geekdocs
      delete: true
      endpoint: https://sp.rknet.org
      path_style: true
      secret_key:
        from_secret: s3_secret_access_key
      source: docs/public/
      strip_prefix: docs/public/
      target: /${DRONE_REPO_NAME}
    when:
      ref:
        - refs/heads/main
        - refs/tags/**

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
    - refs/pull/**

depends_on:
  - build-package
  - build-container

---
kind: pipeline
name: notifications

platform:
  os: linux
  arch: amd64

steps:
  - name: pushrm-dockerhub
    image: chko/docker-pushrm:1
    environment:
      DOCKER_PASS:
        from_secret: docker_password
      DOCKER_USER:
        from_secret: docker_username
      PUSHRM_FILE: README.md
      PUSHRM_SHORT: Annotation based documentation for your Ansible roles
      PUSHRM_TARGET: thegeeklab/${DRONE_REPO_NAME}
    when:
      status:
        - success

  - name: pushrm-quay
    image: chko/docker-pushrm:1
    environment:
      APIKEY__QUAY_IO:
        from_secret: quay_token
      PUSHRM_FILE: README.md
      PUSHRM_TARGET: quay.io/thegeeklab/${DRONE_REPO_NAME}
    when:
      status:
        - success

  - name: matrix
    image: thegeeklab/drone-matrix
    settings:
      homeserver:
        from_secret: matrix_homeserver
      password:
        from_secret: matrix_password
      roomid:
        from_secret: matrix_roomid
      template: "Status: **{{ .Build.Status }}**<br/> Build: [{{ .Repo.Owner }}/{{ .Repo.Name }}]({{ .Build.Link }}){{ if .Build.Branch }} ({{ .Build.Branch }}){{ end }} by {{ .Commit.Author }}<br/> Message: {{ .Commit.Message.Title }}"
      username:
        from_secret: matrix_username
    when:
      status:
        - success
        - failure

trigger:
  ref:
    - refs/heads/main
    - refs/tags/**
  status:
    - success
    - failure

depends_on:
  - docs

---
kind: signature
hmac: 0e7ffc95888e4b6f9a4a86f77fff76a398f069fce490470af34d87955015e18a

...
